[tox]
envlist =
    py
    flake8
    mypy
isolated_build = true

[testenv]
changedir = tests
extras = all
deps =
    -r{toxinidir}/requirements/dev.txt
setenv =
    LUNCHMONEY_ACCESS_TOKEN = {env:LUNCHMONEY_ACCESS_TOKEN:LUNCHMONEY_ACCESS_TOKEN_PLACEHOLDER}
    SPLITWISE_CONSUMER_KEY = {env:SPLITWISE_CONSUMER_KEY:SPLITWISE_CONSUMER_KEY_PLACEHOLDER}
    SPLITWISE_CONSUMER_SECRET = {env:SPLITWISE_CONSUMER_SECRET:SPLITWISE_CONSUMER_SECRET_PLACEHOLDER}
    SPLITWISE_API_KEY = {env:SPLITWISE_API_KEY:SPLITWISE_API_KEY_PLACEHOLDER}
    PUSHOVER_USER_KEY = {env:PUSHOVER_USER_KEY:PUSHOVER_USER_KEY_PLACEHOLDER}
    SENSITIVE_REQUEST_STRINGS = {env:SENSITIVE_REQUEST_STRINGS:SENSITIVE_REQUEST_STRINGS_PLACEHOLDER}
commands =
    ;FLAKE8 SYNTAX CHECK
    flake8 {toxinidir}/lunchable {toxinidir}/tests --count --select=E9,F63,F7,F82 --show-source --statistics
    ;PYTEST UNITTESTS
    coverage erase
    coverage run -m pytest -rA {posargs}
    ;COVERAGE REPORT
    coverage report -m --omit='{toxinidir}/.tox/*,{toxinidir}/tests/*'

[pytest]
# Pytest Settings
log_cli = true
log_level = ERROR
log_format = "%(asctime)s [%(levelname)8s]: %(message)s [%(name)s]"

[testenv:flake8]
changedir = {toxinidir}
skip_install = true
deps =
    flake8
    flake8-bugbear
    flake8-docstrings
    flake8-typing-imports
    pep8-naming
commands =
    flake8 lunchable/ tests/

[flake8]
accept-encodings = utf-8
docstring-convention = numpy
exclude =
    .git,
    __pycache__,
    docs,
    build,
    dist
max-complexity = 10
max-line-length = 100
ignore =
    ; D200 - One-line docstring should fit on one line with quotes [Whitespace Issues]
    ; D400 - First line should end with a period [Docstring Content Issues]
    ; D401 - First line should be in imperative mood; try rephrasing [Docstring Content Issues]
    ; W503 - Line break before binary operator [Black Formatting Issues]
    ; TYP001 - TYP001 guard import, TYPE_CHECKING (not in 3.5.0, 3.5.1)
    ; D403 - First word of the first line should be properly capitalized
    D200
    D400
    D401
    W503
    TYP001
    D403
per-file-ignores =
    tests/plugins/splitlunch/test_splitwise.py:F401
    lunchable/models/assets.py:W291
    lunchable/models/budgets.py:W291
    lunchable/models/categories.py:W291
    lunchable/models/crypto.py:W291
    lunchable/models/plaid_accounts.py:W291
    lunchable/models/recurring_expenses.py:W291
    lunchable/models/tags.py:W291
    lunchable/models/transactions.py:W291
    lunchable/models/tags.py:N805
    lunchable/plugins/splitlunch/lunchmoney_splitwise.py:W291
    lunchable/plugins/pushlunch/pushover.py:W291
    lunchable/plugins/splitlunch/lunchmoney_splitwise.py:W504

[testenv:mypy]
changedir = {toxinidir}
deps =
    mypy
commands =
    ; TODO (@juftin): Clean Up MyPy Errors
    mypy --install-types \
    --ignore-missing-imports \
    --follow-imports=skip \
    --strict-optional \
    --non-interactive \
    --config-file "{toxinidir}/tox.ini" \
    {toxinidir}/lunchable

[mypy]
follow_imports = silent
plugins = pydantic.mypy
warn_redundant_casts = True
warn_unused_ignores = True
disallow_any_generics = True
check_untyped_defs = True
no_implicit_reexport = True
disallow_untyped_defs = True

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True

[testenv:sphinx]
changedir = {toxinidir}/docs
allowlist_externals =
    rm
    make
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    rm -rf {toxinidir}/docs/_build/ && rm -rf {toxinidir}/docs/source/api/
    make html

[testenv:requirements]
changedir = {toxinidir}
allowlist_externals =
    poetry
skip_install = true
deps =
commands =
    poetry export -f requirements.txt --without-hashes --extras all -o requirements/prod.txt
    poetry export -f requirements.txt --without-hashes --extras all --with dev -o requirements/dev.txt
