# coding: utf-8

"""
Lunch Money API - v2

This is a version of the Lunch Money API described using the the OpenAPI 3.X specification.  The goal of this project is to validate an \"API Design First\" approach for the Lunch Money API, which should allow us to gather developer feedback prior to implementation in order to develop API endpoints more quickly.  This version of the API will differ from the existing v1 beta version. For more information on the changes please see the [v2 API Changelog](https://lm-v2-api-mock-data-f24357049a1b.herokuapp.com/v2/changelog)  Some useful links: - [Current v1 Lunch Money API Documentation](https://lunchmoney.dev) - [v2 API Changelog](https://lm-v2-api-mock-data-f24357049a1b.herokuapp.com/v2/changelog) - [OpenAPI API YAML Specification](https://lm-v2-api-mock-data-f24357049a1b.herokuapp.com/v2/openapi/) - [Awesome Lunch Money Projects](https://lunchmoney.dev/#awesome-projects)

The version of the OpenAPI document: 2.7.4
Contact: devsupport@lunchmoney.app
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from lunchable.api.manual_accounts_api import ManualAccountsApi


class TestManualAccountsApi(unittest.TestCase):
    """ManualAccountsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ManualAccountsApi()

    def tearDown(self) -> None:
        pass

    def test_create_manual_account(self) -> None:
        """Test case for create_manual_account

        Create a manual account
        """
        pass

    def test_delete_manual_account(self) -> None:
        """Test case for delete_manual_account

        Delete a manual account
        """
        pass

    def test_get_all_manual_accounts(self) -> None:
        """Test case for get_all_manual_accounts

        Get all manual accounts
        """
        pass

    def test_get_manual_account_by_id(self) -> None:
        """Test case for get_manual_account_by_id

        Get a single manual account
        """
        pass

    def test_update_manual_account(self) -> None:
        """Test case for update_manual_account

        Update an existing manual account
        """
        pass


if __name__ == "__main__":
    unittest.main()
