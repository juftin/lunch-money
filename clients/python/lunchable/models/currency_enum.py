# coding: utf-8

"""
Lunch Money API - v2

This is a version of the Lunch Money API described using the the OpenAPI 3.X specification.    The goal of this project is to validate an \"API Design First\" approach for the Lunch Money API, which should allow us to gather developer feedback prior to implementation in order to develop API endpoints more quickly.  This version of the API will differ from the existing v1 beta version. For more information on the changes please see the  [v2 API Changelog](https://lm-v2-api-mock-data-f24357049a1b.herokuapp.com/v2/changelog)  Some useful links: - [Current v1 Lunch Money API Documentation](https://lunchmoney.dev) - [v2 API Changelog](https://lm-v2-api-mock-data-f24357049a1b.herokuapp.com/v2/changelog) - [OpenAPI API YAML Specification](https://lm-v2-api-mock-data-f24357049a1b.herokuapp.com/v2/openapi/) - [Awesome Lunch Money Projects](https://lunchmoney.dev/#awesome-projects)

The version of the OpenAPI document: 2.7.4
Contact: devsupport@lunchmoney.app
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class CurrencyEnum(str, Enum):
    """
    Supported Currency codes: - `aed`: United Arab Emirates Dirham - `afn`: Afghan Afghani - `all`: Albanian Lek - `amd`: Armenian Dram - `ang`: Netherlands Antillean Guilder - `aoa`: Angolan Kwanza - `ars`: Argentine Peso - `aud`: Australian Dollar - `awg`: Aruban Florin - `azn`: Azerbaijani Manat - `bam`: Bosnia-Herzegovina Convertible Mark - `bbd`: Barbadian Dollar - `bdt`: Bangladeshi Taka - `bgn`: Bulgarian Lev - `bhd`: Bahraini Dinar - `bif`: Burundian Franc - `bmd`: Bermudian Dollar - `bnd`: Brunei Dollar - `bob`: Bolivian Boliviano - `brl`: Brazilian Real - `bsd`: Bahamian Dollar - `btc`: Bitcoin - `btn`: Bhutanese Ngultrum - `bwp`: Botswanan Pula - `byn`: Belarusian Ruble - `bzd`: Belize Dollar - `cad`: Canadian Dollar - `cdf`: Congolese Franc - `chf`: Swiss Franc - `clp`: Chilean Peso - `cny`: Chinese Yuan - `cop`: Colombian Peso - `crc`: Costa Rican Colón - `cuc`: Cuban Convertible Peso - `cup`: Cuban Peso - `cve`: Cape Verdean Escudo - `czk`: Czech Republic Koruna - `djf`: Djiboutian Franc - `dkk`: Danish Krone - `dop`: Dominican Peso - `dzd`: Algerian Dinar - `egp`: Egyptian Pound - `ern`: Eritrean Nakfa - `etb`: Ethiopian Birr - `eur`: Euro - `fjd`: Fijian Dollar - `fkp`: Falkland Islands Pound - `gbp`: British Pound Sterling - `gel`: Georgian Lari - `ggp`: Guernsey Pound - `ghs`: Ghanaian Cedi - `gip`: Gibraltar Pound - `gmd`: Gambian Dalasi - `gnf`: Guinean Franc - `gtq`: Guatemalan Quetzal - `gyd`: Guyanaese Dollar - `hkd`: Hong Kong Dollar - `hnl`: Honduran Lempira - `hrk`: Croatian Kuna - `htg`: Haitian Gourde - `huf`: Hungarian Forint - `idr`: Indonesian Rupiah - `ils`: Israeli New Sheqel - `imp`: Isle of Man Pound - `inr`: Indian Rupee - `iqd`: Iraqi Dinar - `irr`: Iranian Rial - `isk`: Icelandic Króna - `jep`: Jersey Pound - `jmd`: Jamaican Dollar - `jod`: Jordanian Dinar - `jpy`: Japanese Yen - `kes`: Kenyan Shilling - `kgs`: Kyrgystani Som - `khr`: Cambodian Riel - `kmf`: Comorian Franc - `kpw`: North Korean Won - `krw`: South Korean Won - `kwd`: Kuwaiti Dinar - `kyd`: Cayman Islands Dollar - `kzt`: Kazakhstani Tenge - `lak`: Laotian Kip - `lbp`: Lebanese Pound - `lkr`: Sri Lankan Rupee - `lrd`: Liberian Dollar - `lsl`: Lesotho Loti - `ltl`: Lithuanian Litas - `lvl`: Latvian Lats - `lyd`: Libyan Dinar - `mad`: Moroccan Dirham - `mdl`: Moldovan Leu - `mga`: Malagasy Ariary - `mkd`: Macedonian Denar - `mmk`: Myanma Kyat - `mnt`: Mongolian Tugrik - `mop`: Macanese Pataca - `mro`: Mauritanian Ouguiya - `mur`: Mauritian Rupee - `mvr`: Maldivian Rufiyaa - `mwk`: Malawian Kwacha - `mxn`: Mexican Peso - `myr`: Malaysian Ringgit - `mzn`: Mozambican Metical - `nad`: Namibian Dollar - `ngn`: Nigerian Naira - `nio`: Nicaraguan Córdoba - `nok`: Norwegian Krone - `npr`: Nepalese Rupee - `nzd`: New Zealand Dollar - `omr`: Omani Rial - `pab`: Panamanian Balboa - `pen`: Peruvian Nuevo Sol - `pgk`: Papua New Guinean Kina - `php`: Philippine Peso - `pkr`: Pakistani Rupee - `pln`: Polish Zloty - `pyg`: Paraguayan Guarani - `qar`: Qatari Rial - `ron`: Romanian Leu - `rsd`: Serbian Dinar - `rub`: Russian Ruble - `rwf`: Rwandan Franc - `sar`: Saudi Riyal - `sbd`: Solomon Islands Dollar - `scr`: Seychellois Rupee - `sdg`: Sudanese Pound - `sek`: Swedish Krona - `sgd`: Singapore Dollar - `shp`: Saint Helena Pound - `sll`: Sierra Leonean Leone - `sos`: Somali Shilling - `srd`: Surinamese Dollar - `std`: São Tomé and Príncipe Dobra - `svc`: Salvadoran Colón - `syp`: Syrian Pound - `szl`: Swazi Lilangeni - `thb`: Thai Baht - `tjs`: Tajikistani Somoni - `tmt`: Turkmenistani Manat - `tnd`: Tunisian Dinar - `top`: Tongan Paʻanga - `try`: Turkish Lira - `ttd`: Trinidad and Tobago Dollar - `twd`: New Taiwan Dollar - `tzs`: Tanzanian Shilling - `uah`: Ukrainian Hryvnia - `ugx`: Ugandan Shilling - `usd`: United States Dollar - `uyu`: Uruguayan Peso - `uzs`: Uzbekistan Som - `vef`: Venezuelan Bolívar - `vnd`: Vietnamese Dong - `vuv`: Vanuatu Vatu - `wst`: Samoan Tala - `xaf`: CFA Franc BEAC - `xcd`: East Caribbean Dollar - `xof`: CFA Franc BCEAO - `xpf`: CFP Franc - `yer`: Yemeni Rial - `zar`: South African Rand - `zmw`: Zambian Kwacha - `zwl`: Zimbabwean Dollar
    """

    """
    allowed enum values
    """
    AED = "aed"
    AFN = "afn"
    ALL = "all"
    AMD = "amd"
    ANG = "ang"
    AOA = "aoa"
    ARS = "ars"
    AUD = "aud"
    AWG = "awg"
    AZN = "azn"
    BAM = "bam"
    BBD = "bbd"
    BDT = "bdt"
    BGN = "bgn"
    BHD = "bhd"
    BIF = "bif"
    BMD = "bmd"
    BND = "bnd"
    BOB = "bob"
    BRL = "brl"
    BSD = "bsd"
    BTC = "btc"
    BTN = "btn"
    BWP = "bwp"
    BYN = "byn"
    BZD = "bzd"
    CAD = "cad"
    CDF = "cdf"
    CHF = "chf"
    CLP = "clp"
    CNY = "cny"
    COP = "cop"
    CRC = "crc"
    CUC = "cuc"
    CUP = "cup"
    CVE = "cve"
    CZK = "czk"
    DJF = "djf"
    DKK = "dkk"
    DOP = "dop"
    DZD = "dzd"
    EGP = "egp"
    ERN = "ern"
    ETB = "etb"
    EUR = "eur"
    FJD = "fjd"
    FKP = "fkp"
    GBP = "gbp"
    GEL = "gel"
    GGP = "ggp"
    GHS = "ghs"
    GIP = "gip"
    GMD = "gmd"
    GNF = "gnf"
    GTQ = "gtq"
    GYD = "gyd"
    HKD = "hkd"
    HNL = "hnl"
    HRK = "hrk"
    HTG = "htg"
    HUF = "huf"
    IDR = "idr"
    ILS = "ils"
    IMP = "imp"
    INR = "inr"
    IQD = "iqd"
    IRR = "irr"
    ISK = "isk"
    JEP = "jep"
    JMD = "jmd"
    JOD = "jod"
    JPY = "jpy"
    KES = "kes"
    KGS = "kgs"
    KHR = "khr"
    KMF = "kmf"
    KPW = "kpw"
    KRW = "krw"
    KWD = "kwd"
    KYD = "kyd"
    KZT = "kzt"
    LAK = "lak"
    LBP = "lbp"
    LKR = "lkr"
    LRD = "lrd"
    LSL = "lsl"
    LTL = "ltl"
    LVL = "lvl"
    LYD = "lyd"
    MAD = "mad"
    MDL = "mdl"
    MGA = "mga"
    MKD = "mkd"
    MMK = "mmk"
    MNT = "mnt"
    MOP = "mop"
    MRO = "mro"
    MUR = "mur"
    MVR = "mvr"
    MWK = "mwk"
    MXN = "mxn"
    MYR = "myr"
    MZN = "mzn"
    NAD = "nad"
    NGN = "ngn"
    NIO = "nio"
    NOK = "nok"
    NPR = "npr"
    NZD = "nzd"
    OMR = "omr"
    PAB = "pab"
    PEN = "pen"
    PGK = "pgk"
    PHP = "php"
    PKR = "pkr"
    PLN = "pln"
    PYG = "pyg"
    QAR = "qar"
    RON = "ron"
    RSD = "rsd"
    RUB = "rub"
    RWF = "rwf"
    SAR = "sar"
    SBD = "sbd"
    SCR = "scr"
    SDG = "sdg"
    SEK = "sek"
    SGD = "sgd"
    SHP = "shp"
    SLL = "sll"
    SOS = "sos"
    SRD = "srd"
    STD = "std"
    SVC = "svc"
    SYP = "syp"
    SZL = "szl"
    THB = "thb"
    TJS = "tjs"
    TMT = "tmt"
    TND = "tnd"
    TOP = "top"
    TRY = "try"
    TTD = "ttd"
    TWD = "twd"
    TZS = "tzs"
    UAH = "uah"
    UGX = "ugx"
    USD = "usd"
    UYU = "uyu"
    UZS = "uzs"
    VEF = "vef"
    VND = "vnd"
    VUV = "vuv"
    WST = "wst"
    XAF = "xaf"
    XCD = "xcd"
    XOF = "xof"
    XPF = "xpf"
    YER = "yer"
    ZAR = "zar"
    ZMW = "zmw"
    ZWL = "zwl"

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of CurrencyEnum from a JSON string"""
        return cls(json.loads(json_str))
